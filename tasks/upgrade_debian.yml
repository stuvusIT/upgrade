---
- name: Update packages list
  apt:
    update_cache: yes
  changed_when: false

- name: Install dependencies
  apt:
    name: "{{ item }}"
  with_items:
    - aptitude
    - needrestart

- name: List packages to upgrade (1/2)
  shell: aptitude -q -F%p --disable-columns search '~U'
  register: updates
  failed_when: updates.rc != 0 and updates.rc != 1
  changed_when: False

- name: List packages to upgrade (2/2)
  debug: msg="{{ updates.stdout_lines | count }} packages to upgrade ({{ updates.stdout_lines | join(', ') }})"
  when: updates.stdout_lines | count > 1

- name: Upgrade packages
  apt:
    upgrade: safe

- name: Check what the new version is
  shell:  lsb_release -r | awk '{print $2}'
  changed_when: false
  register: new_release

- name: Notify distribution version upgrade
  debug: msg="Debian has been upgraded from {{ ansible_lsb.release }} to {{ new_release.stdout }}"
  when: ansible_lsb.release != new_release.stdout

- name: List services to restart (1/2)
  shell: needrestart -b -r l | grep ^NEEDRESTART-SVC | awk -F '[ .]' '{print $2}'
  register: services
  changed_when: false

- name: List services to restart (2/2)
  debug: msg="{{ services.stdout_lines | count }} services to restart ({{ services.stdout_lines | join (', ') }})"
  when: services.stdout_lines

- name: Restart services
  service:
    name: "{{ item }}"
    state: restarted
  with_items: "{{ services.stdout_lines }}"
  when: services.stdout_lines and upgrade_restart_services and item not in upgrade_restart_services_ignore | union(['dbus'])
